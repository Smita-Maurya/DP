class Solution {
public:
    
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid){
       int m= size(obstacleGrid) ;
       int n= size(obstacleGrid[0]);
        vector<vector<int>> dp(m , vector<int>(n , -1));
       return helper(obstacleGrid , m-1 ,n-1 , dp);
        
    }
    
    
    int helper(vector<vector<int>> &grid , int i , int j , vector<vector<int>>&dp){
        if(i>=0 && j>=0 && grid[i][j]==1){
            return 0;
        }
        if(i==0 && j==0){
            return 1;
        }
        if(i<0 ||j<0){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        int up= helper(grid , i-1 , j , dp);
        int left= helper(grid ,i, j-1 , dp);
        return dp[i][j]=up+left;
    }
};
