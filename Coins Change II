class Solution {
public:
int helper(int amt , vector<int>&coins ,int n, vector<vector<int>>&dp){
     
    if(n==0){
        if(amt%coins[n]==0){
        return 1;
        }
        else{
            return 0;
        }
    }
    if(dp[n][amt]!=-1){
        return dp[n][amt];
    }
     int nopick=helper(amt , coins , n-1 , dp);
     int pick=0;
     if(amt>=coins[n]){
         pick=helper(amt-coins[n] , coins , n , dp);
     }
    return dp[n][amt]=pick+nopick;

}
    int change(int amount, vector<int>& coins) {
        int n=coins.size();
        vector<vector<int>>dp(n , vector<int>(amount+1 ,-1));
        return helper(amount , coins ,n-1, dp);

    }
};
